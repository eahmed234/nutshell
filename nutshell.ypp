%code requires {
    #include <iostream>
    #include <cstdlib>
    #include "nutshell.hpp"
    using namespace std;

    int yylex(); 
}

%code {
    void yyerror(const char* description) { 
    	cout << description << endl; 
    }
}

%define parse.error verbose

%union {
    char* val;
};

%token <val> WORD
%token STOP EXIT

%%

program: line       { YYACCEPT; }
| EXIT              { cout << "Goodbye!\n"; exit(0); }

line: cmd STOP      { parseCMD(); }

cmd: WORD           { currCommand.addCommand(expandVars($1)); free($1); }
| WORD args         { currCommand.addCommand(expandVars($1)); free($1);}

args: WORD          { currCommand.addArg(expandVars($1)); free($1);}
| args WORD         { currCommand.addArg(expandVars($2)); free($2);}

%%